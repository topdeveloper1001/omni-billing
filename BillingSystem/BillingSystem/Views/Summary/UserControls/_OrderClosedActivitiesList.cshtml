@using BillingSystem.Model.CustomModel
@model IEnumerable<OrderActivityCustomModel>

@if (Model != null && Model.Any())
{
    var grid = new WebGrid(Model, ajaxUpdateContainerId: "gridContentOpenOrderClosedActivity", canPage: false);
    <div id="gridContentOpenOrderClosedActivity">
        @grid.GetHtml(htmlAttributes: new { id = "OrderClosedActivityGrid" }, tableStyle: "table closedActvitityGrid", headerStyle: "gridHead", footerStyle: "gridFooter", rowStyle: "gridRow", alternatingRowStyle: "gridRow",
                           columns:
                               grid.Columns(
                                   grid.Column("OrderTypeName", "Order Type", canSort: true, style: "col5"),
                                    grid.Column("OrderCode", "Order Code", canSort: true, style: "col2"),
                                    grid.Column("OrderDescription", "Order Description", canSort: true, style: "col4"),
                                    grid.Column("CategoryName", "Order Category", canSort: true, style: "col6"),
                                    grid.Column("SubCategoryName", "Order Sub-Category", canSort: true, style: "col7"),
                                    grid.Column("OrderScheduleDate", "Scheduled On", canSort: true, style: "col3", format: @<text>
                                        @if (item.OrderScheduleDate != null)
                                                     {
                                            <label id="scheduledDate">@item.OrderScheduleDate.ToString("dd/MM/yyyy HH:mm:ss")</label>
                                                         if (item.Status != "Closed" && item.Status != "On Bill" && item.Status != "Administered" && item.Status != "Cancel/Revoked")
                                                         {
                                                             if (item.ShowEditAction)
                                                             {
                                                    <input type="hidden" id="hdShowEditAction" value="@item.ShowEditAction" />
                                                             }
                                                         }
                                                     }
                                    </text>),
                                                         grid.Column("ExecutedDate", "Administered On", canSort: true, style: "colExeDate", format: @<text>@if (item.ExecutedDate != null)
                                                                         {
                                                                @item.ExecutedDate.ToString("dd/MM/yyyy HH:mm:ss")
                                                                         }
                                                        </text>),
                                                                                grid.Column("Status", "Status", canSort: true, style: "col10"),
                                                                                grid.Column("OrderActivityQuantity", "Quantity Ordered", canSort: true, style: "col1"),
                                                                                grid.Column("ExecutedQuantity", "Quantity Executed", canSort: false, style: "col1"),
                                                                                grid.Column("Comments", "Comments", canSort: false, style: "col7")
                                                                                ))
    </div>
}
else
{
    <h2>No Record found</h2>
}


<script type="text/javascript">
    $(function () {
        if ($('#colClosedActivities').hasClass('in')) {
            //$('#OrderClosedActivityGrid').fixedHeaderTable({ cloneHeadToFoot: true, altClass: 'odd', autoShow: true });
        }
        else {
            $('#colClosedActivities').addClass('in');
            //$('#OrderClosedActivityGrid').fixedHeaderTable({ cloneHeadToFoot: true, altClass: 'odd', autoShow: true });
            $('#colClosedActivities').removeClass('in');
        }

        $("#OrderClosedActivityGrid tbody tr").each(function (i, row) {
            var $actualRow = $(row);
            if ($actualRow.find('.col10').html().indexOf('Open') != -1) {
                $actualRow.removeClass('rowColor8');
                $actualRow.removeClass('rowColor2');
            } else if ($actualRow.find('.col10').html().indexOf("Administered") != -1) {
                $actualRow.addClass('rowColor2');
            } else if ($actualRow.find('.col10').html().indexOf('Cancel/Revoked') != -1) {
                $actualRow.addClass('rowColor8');
            } else if ($actualRow.find('.col10').html().indexOf('Missed Administration') != -1) {
                $actualRow.addClass('rowColor8');
            } else if ($actualRow.find('.col10').html().indexOf('Patient Unavailable') != -1) {
                $actualRow.addClass('rowColor8');
            } else if ($actualRow.find('.col10').html().indexOf('Closed') != -1) {
                $actualRow.addClass('rowColor8');
            } else if ($actualRow.find('.col10').html().indexOf('On Bill') != -1) {
                $actualRow.addClass('rowColor2');
            }
        });
        SetGridSorting(SortCurrentOrderCloseActivites, "#gridContentOpenOrderClosedActivity");
    });
</script>
