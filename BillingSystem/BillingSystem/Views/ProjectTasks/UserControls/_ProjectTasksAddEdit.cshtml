@using BillingSystem.Model
@model ProjectTasks

<style>
    .btn-group {
        margin-left: 15px;
        margin-bottom: 20px;
    }

    .clear {
        clear: both;
    }

    select {
        margin-bottom: 10px;
    }
</style>

@{
    var btnPTasksSaveText = "Save";
    if (Model != null && Model.ProjectTaskId != 0)
    {
        btnPTasksSaveText = "Update";
    }
}
<div class="form" id="ProjectTasksFormDiv">
    @Html.HiddenFor(m => m.ProjectTaskId)
    <div class="col-sm-3">
        <div class="rowTable">
            <label>Project Number:</label>
            <select id="ddlTaskProjectNumber" class="validate[required]"></select>
        </div>
    </div>
    <div class="col-sm-3">
        <div class="rowTable">
            <label>Task Number:</label>
            @Html.TextBoxFor(m => m.TaskNumber, new { @maxlength = "5", @id = "txtTaskNumber", @class = "validate[required]" })
        </div>
    </div>
    <div class="col-sm-3">
        <div class="rowTable">
            <label>Task Name:</label>
            @Html.TextBoxFor(m => m.TaskName, new { @maxlength = "50", @id = "txtTaskName", @class = "validate[required]" })
        </div>
    </div>
    <div class="col-sm-3">
        <div class="rowTable">
            <label>Task Description:</label>
            @Html.TextBoxFor(m => m.TaskDescription, new { @maxlength = "50", @id = "txtTaskDescription", @class = "validate[required]" })
        </div>
    </div>
    <div class="col-sm-3">
        <div class="rowTable">
            <label>Start Date:</label>
            @Html.TextBoxFor(m => m.StartDate, "{0:MM/dd/yyyy}", new { @maxlength = "10", @id = "dtTaskStartDate", @class = "large pull-left" })
        </div>
    </div>
    <div class="col-sm-3">
        <div class="rowTable">
            <label>Completion Date:</label>
            @Html.TextBoxFor(m => m.EstCompletionDate, "{0:MM/dd/yyyy}", new { @maxlength = "10", @id = "dtTaskEstCompletionDate", @class = "large pull-left" })
        </div>
    </div>
    <div class="col-sm-3">
        <div class="rowTable">
            <label>Responsible User:</label>
            <select id="ddlUsersInProjectTasks" class="validate[required]"></select>
            @*@Html.TextBoxFor(m => m.UserResponsible, new { @maxlength = "30", @id = "txtTaskUserResponsible", @class = "validate[required]" })*@
        </div>
    </div>
    <div class="col-sm-3">
        <div class="rowTable">
            <label>Color Code:</label>
            <select id="ddlTaskColorCode" class="validate[required]"></select>
        </div>
    </div>
    <div class="col-sm-3">
        <div class="rowTable">
            <label>Comments:</label>
            @Html.TextAreaFor(m => m.Comments, new { @maxlength = "1000" })
        </div>
    </div>
    <div class="col-sm-2">
        <div class="rowTable">
            <label>
                Milestone:
                @{
                    var mileStone = Model != null && !string.IsNullOrEmpty(Model.ExternalValue1) && Convert.ToInt32(Model.ExternalValue1) == 1;
                }
                @Html.CheckBoxFor(m => mileStone, new { @id = "milestone" })
            </label>
        </div>
    </div>

    <div class="col-sm-2">
        <div class="rowTable">
            <label>Is Active: @Html.CheckBoxFor(m => m.IsActive, new { @id = "taskIsActive" })</label>
        </div>
    </div>
    <div class="clear"></div>
    <div class="btn-group">
        <div>
            <input type="submit" id="btnTasksSave" class="btn btn-primary edit-btn" value="@btnPTasksSaveText" onclick="return SaveProjectTasks();" />
            <button name="ClientCancel" id="btnCancel" class="btn btn-primary edit-btn" type="button" onclick="return ClearProjectTasksForm();">Cancel</button>
        </div>
    </div>
