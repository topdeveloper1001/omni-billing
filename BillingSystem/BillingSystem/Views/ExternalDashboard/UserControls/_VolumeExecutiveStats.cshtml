@model List<BillingSystem.Model.CustomModel.ExternalDashboardModel>

<style>
    .gridHead th:nth-child(8) {
        text-align: center;
    }

    .align-center {
        font-weight: bold;
    }

    #VolumeExecutiveDashboardSection tbody {
        text-align: right;
    }

    #VolumeExecutiveDashboardSection {
        font-size: 11px;
    }
</style>


<div class="form">
    <div class="table-responsive">
        @if (Model != null && Model.Count > 1)
        {
            var grid = new WebGrid(Model, ajaxUpdateContainerId: "gridContent", canPage: false, canSort: false);
            <div id="gridContent">
                @grid.GetHtml(htmlAttributes: new { id = "VolumeExecutiveDashboardSection" }, tableStyle: "table table-grid", headerStyle: "gridHead", footerStyle: "gridFooter",
                    rowStyle: "gridRow", alternatingRowStyle: "gridRow", columns: grid.Columns(
                        grid.Column("CMA", "Actual", style: "col1", format: @<text>@if (item.FormatType != null && (int)item.FormatType == 1)
                                                                                   {
                                                                                       if (item.IndicatorNumber.Trim().Equals("144") || item.IndicatorNumber.Trim().Equals("106") || item.IndicatorNumber.Trim().Equals("107"))
                                                                                       {
                            <span>@string.Format("{0:0.00}", item.CMA)</span>
                                                                                       }
                                                                                       else
                                                                                       {
                            <span>@string.Format("{0:#,##0}", item.CMA)</span>
                                                                                       }
                                                                                   }
                                                                                   else
                                                                                   {
                            <span>@string.Format("{0:0.00%}", Convert.ToDecimal(item.CMA) / 100)</span>
                                                                                   }
                </text>),
                        grid.Column("CMB", "Budget", style: "col2", format: @<text>@if (item.FormatType != null && (int)item.FormatType == 1)
                                                                                   {
                                                                                       if (item.IndicatorNumber.Trim().Equals("144") || item.IndicatorNumber.Trim().Equals("106") || item.IndicatorNumber.Trim().Equals("107"))
                                                                                       {
                            <span>@string.Format("{0:0.00}", item.CMB)</span>
                                                                                       }
                                                                                       else
                                                                                       {
                            <span>@string.Format("{0:#,##0}", item.CMB)</span>
                                                                                       }
                                                                                   }
                                                                                   else
                                                                                   {
                            <span>@string.Format("{0:0.00%}", Convert.ToDecimal(item.CMB) / 100)</span>
                                                                                   }
                </text>),
                        grid.Column("CMVar", "Variance", style: "col3", format: @<text>
                @if (item.IndicatorNumber.Trim().Equals("144") || item.IndicatorNumber.Trim().Equals("106") || item.IndicatorNumber.Trim().Equals("107"))
                {
                    <span id="spnVariance">@string.Format("{0:0.00}", item.CMVar)</span>
                }
                else
                {
                    if (item.FormatType != null && (int)item.FormatType == 2)
                    {
                    <span id="spnVariance">@string.Format("{0:0.00}", item.CMVar)</span>
                    }
                    else
                    {
                    <span id="spnVariance">@string.Format("{0:#,##0}", item.CMVar)</span>
                    }
                }
                @*@if (item.FormatType != null && (int) item.FormatType == 1)
                                                                                     {
                                                                                         if (item.IndicatorNumber.Trim().Equals("144") || item.IndicatorNumber.Trim().Equals("106") || item.IndicatorNumber.Trim().Equals("107"))
                                                                                         {
                                                                                             <span id="spnVariance">@string.Format("{0:0.00}", item.CMVar)</span>
                                                                                         }
                                                                                         else
                                                                                         {
                                                                                             <span id="spnVariance">@string.Format("{0:#,##0}", item.CMVar)</span>
                                                                                         }
                                                                                     }
                                                                                     else
                                                                                     {
                                                                                         <span id="spnVariance">@string.Format("{0:0.00%}", Convert.ToDecimal(item.CMVar)/100)</span>
                                                                                     }*@
                <input type="hidden"  value="@item.CMVarColor" id="hidCMVarColor" />
                </text>),
                                 grid.Column("CMVarPercentage", "% Var", style: "col4", format: @<text>
                <span id="spnVariancePercentage">@String.Format("{0:0.0%}", @item.CMVarPercentage)</span>
                <input type="hidden"  value="@item.CMVarPercentColor" id="hidCMVarPercentColor" />
                </text>),
                                 grid.Column("PMA", "PY", style: "col5",
                                     format: @<text>@if (item.FormatType != null && (int)item.FormatType == 1)
                                                    {
                                                        if (item.IndicatorNumber.Trim().Equals("144") || item.IndicatorNumber.Trim().Equals("106") || item.IndicatorNumber.Trim().Equals("107"))
                                                        {
                                         <span>@string.Format("{0:0.00}", item.PMA)</span>
                                                        }
                                                        else
                                                        {
                                         <span>@string.Format("{0:#,##0}", item.PMA)</span>
                                                        }
                                                    }
                                                    else
                                                    {
                                         <span>@string.Format("{0:0.00%}", Convert.ToDecimal(item.PMA) / 100)</span>
                                                    }
                </text>),
                                             grid.Column("PMVar", "PY Variance", style: "col6",
                                                 format: @<text>
                @*@if (item.FormatType != null && (int)item.FormatType == 1)
                {
                    if (item.IndicatorNumber.Trim().Equals("144") || item.IndicatorNumber.Trim().Equals("106") || item.IndicatorNumber.Trim().Equals("107"))
                    {
                    <span id="spnPMVariance">@string.Format("{0:0.00}", item.PMVar)</span>
                    }
                    else
                    {
                    <span id="spnPMVariance">@string.Format("{0:#,##0}", item.PMVar)</span>
                    }
                }
                else
                {
                    <span id="spnPMVariance">@string.Format("{0:0.00%}", Convert.ToDecimal(item.PMVar) / 100)</span>
                }*@
                @if (item.IndicatorNumber.Trim().Equals("144") || item.IndicatorNumber.Trim().Equals("106") || item.IndicatorNumber.Trim().Equals("107"))
                {
                    <span id="spnPMVariance">@string.Format("{0:0.00}", item.PMVar)</span>
                }
                else
                {
                    if (item.FormatType != null && (int)item.FormatType == 2)
                    {
                    <span id="spnPMVariance">@string.Format("{0:0.00}", item.PMVar)</span>
                    }
                    else
                    {
                    <span id="spnPMVariance">@string.Format("{0:#,##0}", item.PMVar)</span>
                    }
                }
                <input type="hidden"  value="@item.PMAColor" id="hidPMAColor" />
                </text>),
                                          grid.Column("PMVarPercentage", "PY % Var", style: "col7", format: @<text>

                <span id="spnPMVariancePercentage">@String.Format("{0:0.0%}", @item.PMVarPercentage) </span>
                <input type="hidden"  value="@item.PMAPercentColor" id="hidPMAPercentColor" />
                </text>),
                                          grid.Column("DashBoard", "Description", style: "col8 align-center", format: @<text>
                <span>@item.DashBoard</span>
                <input type="hidden" name="hidOwnerShip" value="@item.OwnerShip" id="hidOwnerShip" />
                </text>),
                                          grid.Column("CYTA", "Actual", style: "col9", format: @<text>@if (item.FormatType != null && (int)item.FormatType == 1)
                                                                                                      {
                                                                                                          if (item.IndicatorNumber.Trim().Equals("144") || item.IndicatorNumber.Trim().Equals("106") || item.IndicatorNumber.Trim().Equals("107"))
                                                                                                          {
                                              <span>@string.Format("{0:0.00}", item.CYTA)</span>
                                                                                                          }
                                                                                                          else
                                                                                                          {
                                              <span>@string.Format("{0:#,##0}", item.CYTA)</span>
                                                                                                          }
                                                                                                      }
                                                                                                      else
                                                                                                      {
                                              <span>@string.Format("{0:0.00%}", Convert.ToDecimal(item.CYTA) / 100)</span>
                                                                                                      }
                </text>),
                                                                   grid.Column("CYTB", "Budget", style: "col10", format: @<text>@if (item.FormatType != null && (int)item.FormatType == 1)
                                                                                                                                {
                                                                                                                                    if (item.IndicatorNumber.Trim().Equals("144") || item.IndicatorNumber.Trim().Equals("106") || item.IndicatorNumber.Trim().Equals("107"))
                                                                                                                                    {
                                                                       <span>@string.Format("{0:0.00}", item.CYTB)</span>
                                                                                                                                    }
                                                                                                                                    else
                                                                                                                                    {
                                                                       <span>@string.Format("{0:#,##0}", item.CYTB)</span>
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                else
                                                                                                                                {
                                                                       <span>@string.Format("{0:0.00%}", Convert.ToDecimal(item.CYTB) / 100)</span>
                                                                                                                                }
                </text>),
                                                                           grid.Column("CYTBVar", "Variance", style: "col11", format: @<text>
                @*@if (item.FormatType != null && (int)item.FormatType == 1)
                {
                    if (item.IndicatorNumber.Trim().Equals("144") || item.IndicatorNumber.Trim().Equals("106") || item.IndicatorNumber.Trim().Equals("107"))
                    {
                    <span id="spnCYTBVariance">@string.Format("{0:0.00}", item.CYTBVar)</span>
                    }
                    else
                    {
                    <span id="spnCYTBVariance">@string.Format("{0:#,##0}", item.CYTBVar)</span>
                    }
                }
                else
                {
                    <span id="spnCYTBVariance">@string.Format("{0:0.00%}", Convert.ToDecimal(item.CYTBVar) / 100)</span>
                }*@
                @if (item.IndicatorNumber.Trim().Equals("144") || item.IndicatorNumber.Trim().Equals("106") || item.IndicatorNumber.Trim().Equals("107"))
                {
                    <span id="spnCYTBVariance">@string.Format("{0:0.00}", item.CYTBVar)</span>
                }
                else
                {
                    if (item.FormatType != null && (int)item.FormatType == 2)
                    {
                    <span id="spnCYTBVariance">@string.Format("{0:0.00}", item.CYTBVar)</span>
                    }
                    else
                    {
                    <span id="spnCYTBVariance">@string.Format("{0:#,##0}", item.CYTBVar)</span>
                    }
                }
                <input type="hidden"  value="@item.CYTAVarColor" id="hidCYTAVarColor" />
                </text>),
                                          grid.Column("CYTBVarPercentage", "% Var", style: "col12", format: @<text>

                <span id="spnCYTBVariancePercentage">@String.Format("{0:0.0%}", @item.CYTBVarPercentage)</span>
                <input type="hidden"  value="@item.CYTBPercentColor" id="hidCYTBPercentColor" />
                </text>),
                                          grid.Column("PYTA", "PY", style: "col13", format: @<text>@if (item.FormatType != null && (int)item.FormatType == 1)
                                                                                                   {
                                                                                                       if (item.IndicatorNumber.Trim().Equals("144") || item.IndicatorNumber.Trim().Equals("106") || item.IndicatorNumber.Trim().Equals("107"))
                                                                                                       {
                                              <span>@string.Format("{0:0.00}", item.PYTA)</span>
                                                                                                       }
                                                                                                       else
                                                                                                       {
                                              <span>@string.Format("{0:#,##0}", item.PYTA)</span>
                                                                                         
                                                                                         
                                                                                                       }
                                                                                                   }
                                                                                                   else
                                                                                                   {
                                              <span>@string.Format("{0:0.00%}", Convert.ToDecimal(item.PYTA) / 100)</span>
                                                                                                   }
                </text>),
                                                                   grid.Column("PYTBVar", "PY Variance", style: "col14", format: @<text>
                @*@if (item.FormatType != null && (int)item.FormatType == 1)
                {
                    if (item.IndicatorNumber.Trim().Equals("144") || item.IndicatorNumber.Trim().Equals("106") || item.IndicatorNumber.Trim().Equals("107"))
                    {
                    <span id="spnPYVariance">@string.Format("{0:0.00}", item.PYTBVar)</span>
                    }
                    else
                    {
                    <span id="spnPYVariance">@string.Format("{0:#,##0}", item.PYTBVar)</span>
                    }
                }
                else
                {
                    <span id="spnPYVariance">@string.Format("{0:0.00%}", Convert.ToDecimal(item.PYTBVar) / 100)</span>
                }*@
                @if (item.IndicatorNumber.Trim().Equals("144") || item.IndicatorNumber.Trim().Equals("106") || item.IndicatorNumber.Trim().Equals("107"))
                {
                    <span id="spnPYVariance">@string.Format("{0:0.00}", item.PYTBVar)</span>
                }
                else
                {
                    if (item.FormatType != null && (int)item.FormatType == 2)
                    {
                    <span id="spnPYVariance">@string.Format("{0:0.00}", item.PYTBVar)</span>
                    }
                    else
                    {
                    <span id="spnPYVariance">@string.Format("{0:#,##0}", item.PYTBVar)</span>
                    }
                }
                <input type="hidden"  value="@item.PYTAColor" id="hidPYTAColor" />
                </text>),
                                                   grid.Column("PYTBVarPercentage", "PY % Var", style: "col15", format: @<text>
                <span id="spnPYVariancePercentage">@String.Format("{0:0.0%}", @item.PYTBVarPercentage)</span>
                <input type="hidden"  value="@item.PYTAPercentColor" id="hidPYTAPercentColor" />
                </text>)
                                                   ))
            </div>
        }
        else
        {
            <h2>No Record found</h2>
        }
    </div>
</div>
<script>
    $(function () {
        if ($('#VolumeExecutiveDashboardSection tr').length > 0) {
            $("#VolumeExecutiveDashboardSection tbody tr").each(function (i, row) {
                var $actualRow = $(row);
                //Variance 
                var hidCMVarColor = $($actualRow).find("#hidCMVarColor");
                if (hidCMVarColor != null) {
                    var hidCMVarColorStatus = hidCMVarColor.val();
                    switch (hidCMVarColorStatus) {
                        case "1":
                            $actualRow.find('.col3').addClass('rowColor9');
                            break;
                        case "2":
                            $actualRow.find('.col3').addClass('rowColor2');
                            break;
                        case "3":
                            $actualRow.find('.col3').addClass('rowColor10');
                            break;
                        default:
                    }
                }
                //% Var 	
                var hidCMVarPercentColor = $($actualRow).find("#hidCMVarPercentColor");
                if (hidCMVarPercentColor != null) {
                    var hidCMVarPercentColorStatus = hidCMVarPercentColor.val();
                    switch (hidCMVarPercentColorStatus) {
                        case "1":
                            $actualRow.find('.col4').addClass('rowColor9');
                            break;
                        case "2":
                            $actualRow.find('.col4').addClass('rowColor2');
                            break;
                        case "3":
                            $actualRow.find('.col4').addClass('rowColor10');
                            break;
                        default:
                    }
                }
                //PY Variance
                var hidPMAColor = $($actualRow).find("#hidPMAColor");
                if (hidPMAColor != null) {
                    var hidPMAColorStatus = hidPMAColor.val();
                    switch (hidPMAColorStatus) {
                        case "1":
                            $actualRow.find('.col6').addClass('rowColor9');
                            break;
                        case "2":
                            $actualRow.find('.col6').addClass('rowColor2');
                            break;
                        case "3":
                            $actualRow.find('.col6').addClass('rowColor10');
                            break;
                        default:
                    }
                }
                //PY % Var 
                var hidPMAPercentColor = $($actualRow).find("#hidPMAPercentColor");
                if (hidPMAPercentColor != null) {
                    var hidPMAPercentColorStatus = hidPMAPercentColor.val();
                    switch (hidPMAPercentColorStatus) {
                        case "1":
                            $actualRow.find('.col7').addClass('rowColor9');
                            break;
                        case "2":
                            $actualRow.find('.col7').addClass('rowColor2');
                            break;
                        case "3":
                            $actualRow.find('.col7').addClass('rowColor10');
                            break;
                        default:
                    }
                }
                //CY Variance
                var hidCYTAVarColor = $($actualRow).find("#hidCYTAVarColor");
                if (hidCYTAVarColor != null) {
                    var hidCYTAVarColorStatus = hidCYTAVarColor.val();
                    switch (hidCYTAVarColorStatus) {
                        case "1":
                            $actualRow.find('.col11').addClass('rowColor9');
                            break;
                        case "2":
                            $actualRow.find('.col11').addClass('rowColor2');
                            break;
                        case "3":
                            $actualRow.find('.col11').addClass('rowColor10');
                            break;
                        default:
                    }
                }
                //CY % Var
                var hidCYTBPercentColor = $($actualRow).find("#hidCYTBPercentColor");
                if (hidCYTBPercentColor != null) {
                    var hidCYTBPercentColorStatus = hidCYTBPercentColor.val();
                    switch (hidCYTBPercentColorStatus) {
                        case "1":
                            $actualRow.find('.col12').addClass('rowColor9');
                            break;
                        case "2":
                            $actualRow.find('.col12').addClass('rowColor2');
                            break;
                        case "3":
                            $actualRow.find('.col12').addClass('rowColor10');
                            break;
                        default:
                    }
                }
                //PY Variance
                var hidPYTAColor = $($actualRow).find("#hidPYTAColor");
                if (hidPYTAColor != null) {
                    var hidPYTAColorStatus = hidPYTAColor.val();
                    switch (hidPYTAColorStatus) {
                        case "1":
                            $actualRow.find('.col14').addClass('rowColor9');
                            break;
                        case "2":
                            $actualRow.find('.col14').addClass('rowColor2');
                            break;
                        case "3":
                            $actualRow.find('.col14').addClass('rowColor10');
                            break;
                        default:
                    }
                }
                //PY % Var
                var hidPYTAPercentColor = $($actualRow).find("#hidPYTAPercentColor");
                if (hidPYTAPercentColor != null) {
                    var hidPYTAPercentColorStatus = hidPYTAPercentColor.val();
                    switch (hidPYTAPercentColorStatus) {
                        case "1":
                            $actualRow.find('.col15').addClass('rowColor9');
                            break;
                        case "2":
                            $actualRow.find('.col15').addClass('rowColor2');
                            break;
                        case "3":
                            $actualRow.find('.col15').addClass('rowColor10');
                            break;
                        default:
                    }
                }
            });
        }
    });
</script>
