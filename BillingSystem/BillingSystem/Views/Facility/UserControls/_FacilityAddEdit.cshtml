@using BillingSystem.Common.Common

@using BillingSystem.Model
@model Facility

@{
    ViewBag.Title = "Facility";
    var btnSaveText = "Save";
    if (Model != null && Model.FacilityId != 0)
    {
        btnSaveText = "Update";
    }
    var portalId = ExtensionMethods.DefaultPortalKey;
}
<style>
    .btn-group {
        margin-left: 15px;
    }
</style>

<div class="form" id="facilityDiv">
    @Html.HiddenFor(m => m.FacilityId)
    @Html.HiddenFor(m => m.CorporateID)
    <div>
        <div class="col-xs-12 col-sm-6 col-md-4 col-lg-2">
            <div class="rowTable">
                <label><span class="mandatoryStar"></span>Corporate:</label>
                <select id="ddlCorporate" name="ddlCorporate" class="validate[required]"></select>
                <input type="hidden" id="hdnPortalId" value="@portalId" />
            </div>
            <div class="rowTable">
                <label><span class="mandatoryStar"></span>Facility Number:</label>
                @Html.TextBoxFor(m => m.FacilityNumber, new { @maxlength = "4", @class = "validate[required,custom[onlyNumberSp]]" })
            </div>
            <div class="rowTable">
                <label><span class="mandatoryStar"></span>Facility Name:</label>
                @Html.TextBoxFor(m => m.FacilityName, new { @maxlength = "50", @class = "validate[required,custom[nameFormat]]" })
            </div>
            @if (portalId == 1)
            {
                <div class="rowTable">
                    <label><span class="mandatoryStar"></span>E-Claim ID:</label>
                    @Html.TextBoxFor(m => m.FacilityLicenseNumber, new { @maxlength = "30", @class = "validate[required,custom[nameFormat]]" })
                </div>
            }
        </div>
        <div class="col-xs-12 col-sm-6 col-md-4 col-lg-2">
            <div class="rowTable">
                <label class="control-label"><span class="mandatoryStar"></span>Country :</label>
                @Html.DropDownListFor(m => m.CountryID, new SelectList(Enumerable.Empty<SelectListItem>(), "CountryID", "CountryName"), "--Select One--", new { id = "ddlCountries", @class = "validate[required]" })
                @Html.HiddenFor(m => m.CountryID, new { @id = "hdCountry", @class = "emptyddl" })
            </div>
            @if (portalId == 1)
            {
                <div class="rowTable">
                    <label class="control-label"><span class="mandatoryStar"></span>State :</label>
                    @Html.DropDownListFor(m => m.FacilityState, new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"), "--Select One--", new { id = "ddlStates", @class = "validate[required]" })
                    @Html.HiddenFor(m => m.FacilityState, new { @id = "hdState", @class = "emptyddl" })
                </div>
                <div class="rowTable">
                    <label class="control-label"><span class="mandatoryStar"></span>City :</label>
                    @Html.DropDownListFor(m => m.FacilityCity, new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"), "--Select One--", new { id = "ddlCities", @class = "validate[required]" })
                    @Html.HiddenFor(m => m.FacilityCity, new { @id = "hdCity", @class = "emptyddl" })
                </div>

                <div class="rowTable">
                    <label>Facility Zip Code:</label>
                    @Html.TextBoxFor(m => m.FacilityZipCode, new { @maxlength = "9", @class = "validate[optional[nameFormat]]" })
                </div>
            }
            else
            {
                <div class="rowTable">
                    <label><span class="mandatoryStar"></span>Facility Street Address:</label>
                    @Html.TextAreaFor(m => m.FacilityStreetAddress, new { @maxlength = "40", @class = "validate[optional[addressFormat]]" })
                </div>
                <div class="rowTable">
                    <label>Facility Street Address2</label>
                    @Html.TextAreaFor(m => m.FacilityStreetAddress2, new { @maxlength = "40", @resize = "vertical", @class = "validate[optional[addressFormat]]" })
                </div>

            }
        </div>
        <div class="col-xs-12 col-sm-6 col-md-4 col-lg-2">
            @if (portalId == 1)
            {
                <div class="rowTable">
                    <label><span class="mandatoryStar"></span>Facility Street Address:</label>
                    @Html.TextAreaFor(m => m.FacilityStreetAddress, new { @maxlength = "40", @class = "validate[optional[addressFormat]]" })
                </div>
                <div class="rowTable">
                    <label>Facility Street Address2</label>
                    @Html.TextAreaFor(m => m.FacilityStreetAddress2, new { @maxlength = "40", @resize = "vertical", @class = "validate[optional[addressFormat]]" })
                </div>
            }
            else
            {

                <div class="rowTable">
                    <label class="control-label"><span class="mandatoryStar"></span>City :</label>
                    @Html.DropDownListFor(m => m.FacilityCity, new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"), "--Select One--", new { id = "ddlCities", @class = "validate[required]" })
                    @Html.HiddenFor(m => m.FacilityCity, new { @id = "hdCity", @class = "emptyddl" })
                </div>
                <div class="rowTable">
                    <label class="control-label"><span class="mandatoryStar"></span>State :</label>
                    @Html.DropDownListFor(m => m.FacilityState, new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"), "--Select One--", new { id = "ddlStates", @class = "validate[required]" })
                    @Html.HiddenFor(m => m.FacilityState, new { @id = "hdState", @class = "emptyddl" })
                </div>

                <div class="rowTable">
                    <label>Facility Zip Code:</label>
                    @Html.TextBoxFor(m => m.FacilityZipCode, new { @maxlength = "9", @class = "validate[optional[nameFormat]]" })
                </div>
                <div class="rowTable">
                    <label>Facility PO Box:</label>
                    @Html.TextBoxFor(m => m.FacilityPOBox, new { @maxlength = "9", @class = "validate[optional[nameFormat]]" })
                </div>
            }
        </div>
        <div class="col-xs-12 col-sm-6 col-md-4 col-lg-2">
            @if (portalId == 1)
            {
                <div class="rowTable">
                    <label><span class="mandatoryStar"></span>License Expire Date:</label>
                    @Html.TextBoxFor(m => m.FacilityLicenseNumberExpire, "{0:MM/dd/yyyy}", new { @maxlength = "10", @class = "dtGreaterThanCurrent validate[required]", @onchange = "CheckValidDateNotLessThanTodayDate(this,'FacilityLicenseNumberExpire')" })
                </div>
                <div class="rowTable">
                    <label><span class="mandatoryStar"></span>Facility Time Zone:</label>
                    <select id="ddlFacilityTimeZone" class="validate[required]"></select>
                    @Html.HiddenFor(m => m.FacilityTimeZone)
                </div>

                <div class="rowTable">
                    <label>Facility Regions:</label>
                    <select id="ddlFacilityRegions"></select>
                </div>
            }
            else
            {
                <div class="rowTable">
                    <label>Facility Main Phone:</label>
                    <select id="ddlMainPhone" class="marginBottomNone telephoneCol1" onchange="return OnCountryDropdownChange('#lblMainPhone', '#ddlMainPhone');"></select>
                    <span id="lblMainPhone" class="marginTopPhoneNo"></span>
                    @Html.HiddenFor(m => m.FacilityMainPhone, new { @id = "hdMainPhone" })
                    @Html.TextBoxFor(m => m.FacilityMainPhone, new { @maxlength = "11", @class = "PhoneMask telephoneCol2 validate[optional[phone]]", @id = "txtFacilityMainPhone" })
                </div>
                <div class="rowTable">
                    <label>Facility Fax:</label>
                    <select id="ddlFax" class="marginBottomNone telephoneCol1" onchange="return OnCountryDropdownChange('#lblFax', '#ddlFax');"></select>
                    <span id="lblFax" class="marginTopPhoneNo"></span>
                    @Html.HiddenFor(m => m.FacilityFax, new { @id = "hdFacilityFax" })
                    @Html.TextBoxFor(m => m.FacilityFax, new { @maxlength = "11", @class = "telephoneCol2 validate[optional[phone]] PhoneMask", @id = "txtFacilityFax" })
                </div>
                <div class="rowTable">
                    <label>Facility Second Phone:</label>
                    <select id="ddlSecondPhone" class="marginBottomNone telephoneCol1" onchange="return OnCountryDropdownChange('#lblSecondPhone', '#ddlSecondPhone');"></select>
                    <span id="lblSecondPhone" class="marginTopPhoneNo"></span>
                    @Html.HiddenFor(m => m.FacilitySecondPhone, new { @id = "hdSecondPhone" })
                    @Html.TextBoxFor(m => m.FacilitySecondPhone, new { @maxlength = "11", @class = "PhoneMask telephoneCol2 validate[optional[phone]]", @id = "txtFacilitySecondPhone" })
                </div>
            }

        </div>
        <div class="col-xs-12 col-sm-6 col-md-4 col-lg-2">
            @if (portalId == 1)
            {
                <div class="rowTable">
                    <label><span class="mandatoryStar"></span>Sender ID:</label>
                    @Html.TextBoxFor(m => m.SenderID, new { @maxlength = "10", @class = "validate[required,custom[onlyLetterNumber]]" })
                </div>

                <div class="rowTable">
                    <label><span class="mandatoryStar"></span>Facility PO Box:</label>
                    @Html.TextBoxFor(m => m.FacilityPOBox, new { @maxlength = "15", @class = "validate[required,custom[nameFormat]]" })
                </div>
                <div class="rowTable">
                    <label>Facility Type:</label>
                    <select id="ddlFacilityType"></select>
                </div>
            }
            else
            {
                <div class="rowTable">
                    <label>Facility Contact Name:</label>
                    <input id="txtFacilityContactName" class="validate[optional[onlyLetterSp]]" maxlength="50" />
                </div>

                <div class="rowTable">
                    <label>Facility Contact Email:</label>
                    <input id="txtFacilityContactEmail" class="validate[optional[email]]" maxlength="50" />
                </div>

                <div class="rowTable">
                    <label>Facility Second Contact Name:</label>
                    <input id="txtFacilitySecondContactName" class="validate[optional[onlyLetterSp]]" maxlength="50" />
                </div>

                <div class="rowTable">
                    <label>Facility Second Contact Email:</label>
                    <input id="txtFacilitySecondContactEmail" class="validate[optional[email]]" maxlength="50" />
                </div>
            }

        </div>
        <div class="col-xs-12 col-sm-6 col-md-4 col-lg-2">
            @if (portalId == 1)
            {
                <div class="rowTable">
                    <label>License Type:</label>
                    @Html.TextBoxFor(m => m.FacilityTypeLicense, new { @maxlength = "20", @class = "validate[optional[nameFormat]]" })
                </div>
                <div class="rowTable">
                    <label>Total License Bed:</label>
                    @Html.TextBoxFor(m => m.FacilityTotalLicenseBed, new { @maxlength = "4", @class = "validate[optional[onlyNumberSp]]" })
                </div>
                <div class="rowTable">
                    <label>Total Staffed Bed:</label>
                    @Html.TextBoxFor(m => m.FacilityTotalStaffedBed, new { @maxlength = "4", @class = "validate[optional[onlyNumberSp]]" })
                </div>
            }
            else
            {
                <div class="rowTable">
                    <label>Facility Type:</label>
                    <select id="ddlFacilityType"></select>
                </div>
                <div class="rowTable">
                    <label><span class="mandatoryStar"></span>Facility Time Zone:</label>
                    <select id="ddlFacilityTimeZone" class="validate[required]"></select>
                    @Html.HiddenFor(m => m.FacilityTimeZone)
                </div>

                <div class="rowTable">
                    <label>Facility Regions:</label>
                    <select id="ddlFacilityRegions"></select>
                </div>
                <div class="rowTable">
                    <label>Total License Bed:</label>
                    @Html.TextBoxFor(m => m.FacilityTotalLicenseBed, new { @maxlength = "4", @class = "validate[optional[onlyNumberSp]]" })
                </div>

            }
        </div>
        <div class="clear"></div>
        <div class="btn-group">
            <input type="button" id="btnSaveFacility" class="blue-btn btn btn-primary edit-btn marginBtn" value="@btnSaveText" onclick="SaveFacility();" />
            <button name="ClientCancel" class="blue-btn btn btn-primary edit-btn marginBtn" onclick="ClearFacilityForm();" type="button">Cancel</button>
        </div>
    </div>
</div>

<script src="~/Scripts/Common/CascadingDataBinding.js"></script>