@using BillingSystem.Model
@model ManualChargesTracking

<style>
    .btn-group {
        margin-left: 10px;
        margin-bottom: 20px;
    }

    .clear {
        clear: both;
    }

    select {
        margin-bottom: 10px;
    }
</style>

@{
    var btnSaveText = "Save";
    if (Model.ManualChargesTrackingID != null && Model.ManualChargesTrackingID != 0)
    {
        btnSaveText = "Update";
    }
}
<div class="form" id="ManualChargesTrackingFormDiv">
    @*// BBCOLUMNSHERE*@
   <div class="col-sm-3">
      <div class="rowTable">
        <label>ManualChargesTrackingID:</label>
        @Html.TextBoxFor(m => m.ManualChargesTrackingID, new { @maxlength = "10", @id = "txtManualChargesTrackingID" })
      </div>
      <div class="rowTable">
        <label>TrackingType:</label>
        @Html.TextBoxFor(m => m.TrackingType, new { @maxlength = "10", @id = "txtTrackingType" })
      </div>
      <div class="rowTable">
        <label>TrackingTypeNameVal:</label>
        @Html.TextBoxFor(m => m.TrackingTypeNameVal, new { @maxlength = "50", @id = "txtTrackingTypeNameVal" })
      </div>
      <div class="rowTable">
        <label>TrackingColumnName:</label>
        @Html.TextBoxFor(m => m.TrackingColumnName, new { @maxlength = "50", @id = "txtTrackingColumnName" })
      </div>
      <div class="rowTable">
        <label>TrackingTableName:</label>
        @Html.TextBoxFor(m => m.TrackingTableName, new { @maxlength = "50", @id = "txtTrackingTableName" })
      </div>
   </div>
   <div class="col-sm-3">
      <div class="rowTable">
        <label>TrackingValue:</label>
        @Html.TextBoxFor(m => m.TrackingValue, new { @maxlength = "50", @id = "txtTrackingValue" })
      </div>
      <div class="rowTable">
        <label>TrackingBillStatus:</label>
        @Html.TextBoxFor(m => m.TrackingBillStatus, new { @maxlength = "50", @id = "txtTrackingBillStatus" })
      </div>
      <div class="rowTable">
        <label>BillHeaderID:</label>
        @Html.TextBoxFor(m => m.BillHeaderID, new { @maxlength = "10", @id = "txtBillHeaderID" })
      </div>
      <div class="rowTable">
        <label>EncounterID:</label>
        @Html.TextBoxFor(m => m.EncounterID, new { @maxlength = "10", @id = "txtEncounterID" })
      </div>
      <div class="rowTable">
        <label>PatientID:</label>
        @Html.TextBoxFor(m => m.PatientID, new { @maxlength = "10", @id = "txtPatientID" })
      </div>
   </div>
   <div class="col-sm-3">
      <div class="rowTable">
        <label>FacilityID:</label>
        @Html.TextBoxFor(m => m.FacilityID, new { @maxlength = "10", @id = "txtFacilityID" })
      </div>
      <div class="rowTable">
        <label>CorporateID:</label>
        @Html.TextBoxFor(m => m.CorporateID, new { @maxlength = "10", @id = "txtCorporateID" })
      </div>
      <div class="rowTable">
        <label>CreatedBy:</label>
        @Html.TextBoxFor(m => m.CreatedBy, new { @maxlength = "10", @id = "txtCreatedBy" })
      </div>
      <div class="rowTable">
        <label>CreatedDate:</label>
        @Html.TextBoxFor(m => m.CreatedDate,"{0:MM/dd/yyyy}", new { @maxlength = "10", @id = "dtCreatedDate" })
      </div>
      <div class="rowTable">
        <label>ModifiedBy:</label>
        @Html.TextBoxFor(m => m.ModifiedBy, new { @maxlength = "10", @id = "txtModifiedBy" })
      </div>
   </div>
   <div class="col-sm-3">
      <div class="rowTable">
        <label>ModifiedDate:</label>
        @Html.TextBoxFor(m => m.ModifiedDate,"{0:MM/dd/yyyy}", new { @maxlength = "10", @id = "dtModifiedDate" })
      </div>
      <div class="rowTable">
        <label>DeletedBy:</label>
        @Html.TextBoxFor(m => m.DeletedBy, new { @maxlength = "10", @id = "txtDeletedBy" })
      </div>
      <div class="rowTable">
        <label>DeletedDate:</label>
        @Html.TextBoxFor(m => m.DeletedDate,"{0:MM/dd/yyyy}", new { @maxlength = "10", @id = "dtDeletedDate" })
      </div>
      <div class="rowTable">
        <label>ExternalValue1:</label>
        @Html.TextBoxFor(m => m.ExternalValue1, new { @maxlength = "50", @id = "txtExternalValue1" })
      </div>
      <div class="rowTable">
        <label>ExternalValue2:</label>
        @Html.TextBoxFor(m => m.ExternalValue2, new { @maxlength = "50", @id = "txtExternalValue2" })
      </div>
   </div>
   <div class="col-sm-3">
      <div class="rowTable">
        <label>ExternalValue3:</label>
        @Html.TextBoxFor(m => m.ExternalValue3, new { @maxlength = "50", @id = "txtExternalValue3" })
      </div>
      <div class="rowTable">
        <label>ExternalValue4:</label>
        @Html.TextBoxFor(m => m.ExternalValue4, new { @maxlength = "50", @id = "txtExternalValue4" })
      </div>
      <div class="rowTable">
        <label>ExternalValue5:</label>
        @Html.TextBoxFor(m => m.ExternalValue5, new { @maxlength = "50", @id = "txtExternalValue5" })
      </div>
      <div class="rowTable">
        <label>ExternalValue6:</label>
        @Html.TextBoxFor(m => m.ExternalValue6, new { @maxlength = "50", @id = "txtExternalValue6" })
      </div>
      <div class="rowTable">
        <label>IsVisible:</label>
        @Html.TextBoxFor(m => m.IsVisible, new { @maxlength = "10", @id = "txtIsVisible" })
      </div>
   </div>
    <div class="clear"></div>
    <div class="btn-group">
        <div style="float: left;">
            <input type="submit" id="btnSave" class="btn btn-primary edit-btn marginBtn" value="@btnSaveText" onclick="return SaveManualChargesTracking();" />
            <button name="ClientCancel" id="btnCancel" class="btn btn-primary edit-btn marginBtn" type="button" onclick="return ClearManualChargesTrackingForm();">Cancel</button>
        </div>
    </div>



</div>
