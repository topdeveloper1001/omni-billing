@using BillingSystem.Model.CustomModel

@model List<ScrubHeaderCustomModel>

<div class="form">
    <div class="table-responsive">
        @if (Model != null && Model.Count > 0)
        {
            var grid = new WebGrid(Model, ajaxUpdateContainerId: "griScrubHeaderBillEditsdContentHeaderList", canPage: false);
            <div id="griScrubHeaderBillEditsdContentHeaderList">
                @grid.GetHtml(htmlAttributes: new { id = "ScrubHeaderBillWithErrorEdits" }, tableStyle: "table table_scroll_withErrors", headerStyle: "gridHead", footerStyle: "gridFooter", rowStyle: "gridRow",
                    columns:
                        grid.Columns(
                            grid.Column("PatientName", "Patient Name", style: "col1", format: @<text>
                            @if (item.BillPenality == "High")
                            {
                                <input type="hidden" name="hidPenality" value="High" />
                            }
                            else if (item.BillPenality == "Medium")
                            {
                                <input type="hidden" name="hidPenality" value="Medium" />
                            }
                            else if (item.BillPenality == "Low")
                            {
                                <input type="hidden" name="hidPenality" value="Low" />
                            }
                            <span>@item.PatientName</span>
                            </text>),
                                     grid.Column("BillHeaderID", "Bill Header ID"),
                            //grid.Column("BillNumber", "Bill Number"),
                            grid.Column("EncounterNumber","Encounter Number"),
                            grid.Column("EncounterPatientType","Patient Type"),
                            grid.Column("ExecutedByUser", "Executed By"),
                            grid.Column("EncounterEndTime", "Encounter EndTime", @<text>@if (item.EncounterEndTime != null)
                            {
                                @item.EncounterEndTime.ToString("dd/MM/yyyy HH:mm:ss")
                            }</text>),
                            grid.Column("BillDaysLeftToEClaim", "Days Left to send Claim"),
                            grid.Column("Performed", "Performed"),
                            grid.Column("Passed", "Passed"),
                            grid.Column("Failed", "Failed"),
                            grid.Column("NotApplicable", "Not Applicable"),
                            //grid.Column("PatientID", header: "PatientID"),
                            //grid.Column("IsActive", header: "IsActive"),
                            grid.Column("Status", "Status", canSort: true, format: @<text>
                                @if (item.Status != null)
                                {
                                    if (item.Status == 0)
                                    {
                                        <img src="@Url.Content("~/images/passed16x16.png")" title="Passed" />
                                    }
                                    else if (item.Status == 1)
                                    {
                                        <img src="@Url.Content("~/images/warning16x16.png")" title="Warning" />
                                    }
                                    else if (item.Status == 2)
                                    {
                                        <img src="@Url.Content("~/images/stop16x16.png")" title="Error" />
                                    }
                                    else if (item.Status == 99)
                                    {
                                        <img src="@Url.Content("~/images/notApplicable16x16.png")" title="Not Applicable" />
                                    }
                                }
                            </text>),
                            grid.Column(header: "Assigned To", canSort: true, format: @<text>
                    <label id="@("lblTo" + item.ScrubHeaderID)">@item.AssignedToUser</label>
                    <select id="@item.ScrubHeaderID" class="ddlUsers" onchange=" SelectUser('@item.scrubheaderid'); "></select>
                            </text>),
                            grid.Column(header: "Assigned By", canSort: true, format: @<text>
                    <label id="@("lblBy" + item.ScrubHeaderID)">@item.AssignedByUser</label>
                            </text>),
                            grid.Column(header: "View Report", canSort: true, format: @<text>
                    <div class="iconsAction">
                        <a href="#" title="View Scrub Report" onclick="return ViewScrubReport('@item.ScrubHeaderID', 999); ">
                            <img src="@Url.Content("~/images/scrub-icon.png")" />
                        </a>
                        <a href="#" title="ReScrub this" onclick="return ReScrubBillEdit('@item.BillHeaderID'); ">
                            <img src="@Url.Content("~/images/ReScrub.png")" />
                        </a>
                        <a class="forBillActivity" href="#" onclick="ViewBillActivities('@item.BillHeaderID', '@Url.Action("GetBillActivitiesByBillHeaderId", "BillHeader")') " title="View Activities">
                            <img src="@Url.Content("~/images/details-icon.png")" />
                        </a>
                        @if (item.Failed > 0)
                        {
                            <a class="ViewCorrections" href="@Url.Action("Index", "UploadCharges", new { pId = item.PatientID, eId= item.EncounterID, bhId= item.BillHeaderID })" title="Go to Correction title="Go to Corrections">
                                <img src="@Url.Content("~/images/corrections20x20.png")" />
                            </a>
                        }
                    </div>
                            </text>)))
            </div>
        }
        else
        {

            <h2>No Record found</h2>
        }
    </div>
</div>
<script>
    $(function() {
        if ($('.table_scroll_withErrors tr').length > 5) {
            $('#collapseScrubHeaderWithErrorsList').addClass('in').attr('style', 'height:auto;');
            //$('.table_scroll_withErrors').fixedHeaderTable({ cloneHeadToFoot: true, altClass: 'odd', autoShow: true });
        }
        $('.table_scroll_withErrors').find('a').on('click', function (e) {
            $('.table').find('a').closest('tr').removeClass('highlighted_row');
            $(this).closest('tr').addClass('highlighted_row');
        });
        SetGridSorting(SortClaimswithPotentialEdit, "#griScrubHeaderBillEditsdContentHeaderList");
    });
</script>