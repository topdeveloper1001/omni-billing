@using BillingSystem.Model.CustomModel
@model List<AuditLogCustomModel>

<div class="form">
    <div class="table-responsive">
        @if (Model != null && Model.Count > 0)
        {
            var grid = new WebGrid(Model, ajaxUpdateContainerId: "gridContent", canPage: false);
            <div id="gridContent">
                @grid.GetHtml(htmlAttributes: new {id = "SchedulingReportGrid"}, tableStyle: "table table_scroll", headerStyle: "gridHead", footerStyle: "gridFooter", rowStyle: "gridRow", alternatingRowStyle: "gridAltRow", columns: grid.Columns(
                grid.Column("CreatedDate", header: "Corrected On", canSort: true, format: @<text>@if (item.CreatedDate != null)
                                                                                                     {
                                                                                                         @item.CreatedDate.ToString("dd/MM/yyyy HH:mm:ss")
                                                                                                     }</text>),
                    grid.Column("UserName", header: "Corrected By", canSort: true),
                             grid.Column("FieldName", header: "Field Name", canSort: true),
                    grid.Column("TableName", header: "Table Name", canSort: true),

                             grid.Column("OldValue", header: "Value Before Modify", canSort: true),
                         grid.Column("NewValue", header: "Value After Modify", canSort: true),
                             
                             grid.Column("EventType", header: "Event", canSort: false)
                    //grid.Column("TrackValueAfter", header: "Column Value After", canSort: false)
                    ))
            </div>
        }
        else
        {
            <h2>No Record found</h2>
        }
    </div>
</div>
<script>
    $(function () {
        if ($('#SchedulingReportGrid tr').length > 0) {
            $('.table_scroll').fixedHeaderTable({ cloneHeadToFoot: true, altClass: 'odd', autoShow: true });
        }
        //SetGridSorting(SortCollectionLogtGrid, "#gridContent");
    });
</script>