
@model BillingSystem.Model.CustomModel.EncounterCustomModel

<div class="form" id="AdmitPatientDiv">

    <div class="col-sm-6">
        @*borderGrey*@
        <h1 class="admitPatientTitle" >Encounter Type</h1>
        <div class="col-sm-12 col-lg-6">
            <div class="rowTable">
                <label><span class="mandatoryStar"></span>Encounter Start Type:</label>
                <select id="ddlEncounterStartType" class="validate[required] starttype"></select>
                @Html.HiddenFor(m => m.EncounterStartType, new { @id = "hdEncounterStartType" })
                @Html.HiddenFor(m => m.EncounterFacility, new { @id = "hdEncounterFacility" })
            </div>
            <div class="rowTable">
                <label><span class="mandatoryStar"></span>Encounter Physician Type:</label>
                <select id="ddlPhysicianType" onchange="OnChangePhysicianType()" class="validate[required] starttype"></select>
                @Html.HiddenFor(m => m.EncounterPhysicianType, new { @id = "hdPhysicianType" })
            </div>
            <div class="rowTable">
                <label><span class="mandatoryStar"></span>Encounter Attending Physician:</label>
                <select id="ddlPhysicians" class="validate[required] starttype"></select>
                @Html.HiddenFor(m => m.EncounterAttendingPhysician, new { @id = "hdEncounterAttendingPhysician" })
            </div>
            <div class="rowTable">
                <label><span class="mandatoryStar"></span>Encounter Admit Reason:</label>
                @Html.TextAreaFor(m => m.EncounterAdmitReason, new { @maxlength = "500", @ID = "txtEncounterAdmitReason", @class = "validate[required] starttype" })
            </div>
            <div class="rowTable">
                <label><span class="mandatoryStar"></span>Encounter Patient Type:</label>
                <select id="ddlPatientTypes" class="validate[required] starttype" onchange="OnChangePatientType('#ddlPatientTypes');"></select>
                @Html.HiddenFor(m => m.EncounterPatientType, new { @id = "hdEncounterPatientType" })
                @Html.HiddenFor(m => m.EncounterPatientTypecheck, new { @id = "hdencounterPatientTypechecke" })
            </div>
            @*Commented on 16062015 by Amit Jain*@
            @*<div class="rowTable">
                <label><span class="mandatoryStar"></span>Encounter Service Category:</label>
                <select id="ddlServiceCategory" class="starttype"></select>
                @Html.HiddenFor(m => m.EncounterServiceCategory, new { @id = "hdEncounterServiceCategory" })
            </div>*@
        </div>
        <div class="col-sm-12 col-lg-6">
            <div class="rowTable">
                <label><span class="mandatoryStar"></span>Encounter Type:</label>
                <select id="ddlEncounterTypes" class="validate[required] starttype"></select>
                @Html.HiddenFor(m => m.EncounterType, new { @id = "hdEncounterType" })
            </div>
            <div class="rowTable">
                <label><span class="mandatoryStar"></span>Encounter Speciality:</label>
                <select id="ddlEncounterSpeciality" class="validate[required] starttype"></select>
                @Html.HiddenFor(m => m.EncounterSpecialty, new { @id = "hdEncounterSpecialty" })
            </div>
            <div class="rowTable">
                <label><span class="mandatoryStar"></span>Mode of Arrival:</label>
                <select id="ddlEncounterModeOfArrival" class="validate[required] starttype"></select>
                @Html.HiddenFor(m => m.EncounterModeofArrival, new { @id = "hdEncounterModeofArrival" })
            </div>
            @* HomeCare Recurring Field for O/P Encounters *@
            <div class="rowTable" id="DivHomeCareRecurring">
                <label>Homecare Recurring:</label>
                @Html.CheckBoxFor(m => m.HomeCareRecurring, new { @id = "chkHomeCareRecurring" })
            </div>
        </div>
    </div>
    <div class="col-sm-6">
        @*borderBottom*@
        <h1 class="admitPatientTitle">Additional Info</h1>
        <div class="col-sm-12 col-lg-6">
            <div class="rowTable">
                <label><span class="mandatoryStar"></span>Encounter Start Time:</label>
                @Html.TextBoxFor(m => m.EncounterStartTime, new { @maxlength = "20", @ID = "txtEncounterStartTime", @class = "validate[required] dtGeneral" })
            </div>
            <div class="rowTable">
                <label>Encounter Accident Related:</label>
                <select id="ddlAccidentRelated" onchange="OnChangeAccidentRelated('#ddlAccidentRelated',1110,'')" class="starttype"></select>
                @Html.HiddenFor(m => m.EncounterAccidentRelated, new { @id = "hdEncounterAccidentRelated" })
            </div>
            <div class="rowTable">
                <label>Encounter Accident Type:</label>
                <select id="ddlAccidentType" class="starttype"></select>
                @Html.HiddenFor(m => m.EncounterAccidentType, new { @id = "hdEncounterAccidentType" })
            </div>
            <div id="divTransferPatient">
                <div class="rowTable AssignBed">
                    <label><span class="mandatoryStar"></span>Encounter Admit Type:</label>
                    <select id="ddlEncounterAdmitType" class="validate[required] starttype"></select>
                    @Html.HiddenFor(m => m.EncounterAdmitType, new { @id = "hdEncounterAdmitType" })
                </div>
                <div class="rowTable AssignBed" style="margin-top: 20px;">
                    <label>Encounter Inpatient Bed:</label>
                    <a href="#" onclick="return ChooseBed();" id="aChooseBed" style="text-decoration: none;" class="blue-btn btn btn-primary edit-btn">Choose Bed</a>
                    <div class="grayBoxBig">
                        @*<span id="lblInPatientBed">@Model.BedName</span>*@
                        <div class="rowTable">
                            <span class="bold">Bed:</span><span id="lblBedInfo">@(string.Format("{0} / {1} / {2}", Model.FloorName, Model.Room, Model.BedName))</span>
                        </div>
                        <div class="rowTable">
                            <span class="bold">Department:</span>
                            <span id="lblDepartment">
                                @Model.DepartmentName
                            </span>
                        </div>
                        <div class="rowTable">
                            <span class="bold">Service Code:</span>
                            <span id="lblServiceCodeInfo">
                                @(string.Format("{0} / {1}", Model.patientBedService, Model.BedRateApplicable))
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-12 col-lg-6">
            <div class="rowTable">
                <label><span class="mandatoryStar"></span>Encounter Inpatient Admit Date:</label>
                @Html.TextBoxFor(m => m.EncounterInpatientAdmitDate, new { @maxlength = "20", @ID = "z", @class = "validate[required] dtGeneral starttype" })
            </div>
            <div class="rowTable">
                <label>Encounter Transfer Source:</label>
                @Html.TextBoxFor(m => m.EncounterTransferSource, new { @maxlength = "20", @ID = "txtEncounterTransferSource" })
            </div>
            <div class="rowTable">
                <label>Encounter Transfer Hospital:</label>
                @Html.TextBoxFor(m => m.EncounterTransferHospital, new { @maxlength = "50", @ID = "txtEncounterTransferHospital" })
            </div>
            <div class="rowTable yellowBox1">
                <input type="hidden" id="hdShowEndType" value="1" />
                <div class="rowTable endTypeDiv">
                    <label>Encounter End Type:</label>
                    <select id="ddlEncounterEndType"></select>
                    @Html.HiddenFor(m => m.EncounterEndType, new { @id = "hdEncounterEndType" })
                </div>
                <div class="rowTable endTypeDiv">
                    <label>Encounter End Time:</label>
                    @Html.TextBoxFor(m => m.EncounterEndTime, new { @maxlength = "20", @ID = "txtEncounterEndTime", @class = "validate[required] dtGeneral" })
                </div>
            </div>
            <div class="rowTable yellowBox1">
                <div class="rowTable">
                    <label>Virtually Discharged on:</label>
                    @if (!string.IsNullOrEmpty(Model.VirtuallyDischargeOn))
                    {
                        @Model.VirtuallyDischargeOn
                    }
                </div>
            </div>
        </div>
    </div>
    <div id="patientBedsDiv" style="display: none;">
    </div>
    @Html.HiddenFor(m => m.BedId, new { @id = "hidBedId" })
    @Html.HiddenFor(m => m.OverrideBedType, new { @id = "hidBedOverideType" })
    <input type="hidden" value="0" id="hidServiceId" />
    <div class="clear"></div>
    <div style="padding: 10px 30px;" class="pull-right"><span class="mandatoryStar"></span>Mandatory &nbsp;</div>
    <div class="btn-group">
        @if (@Model.EncounterID > 0)
        {
            <input type="submit" value="Update" class="blue-btn btn btn-primary edit-btn marginBtn" onclick="AdmitPatient('@Model.EncounterID');" id="btnUpdateEncounter">
        }
        else
        {
            <input type="submit" value="Save" class="blue-btn btn btn-primary edit-btn marginBtn" onclick="AdmitPatient('@Model.EncounterID');">
        }
        <button type="button" class="blue-btn btn btn-primary edit-btn marginBtn" name="ClientCancel" onclick="RedirectToAdmit();">Cancel</button>
    </div>
</div>