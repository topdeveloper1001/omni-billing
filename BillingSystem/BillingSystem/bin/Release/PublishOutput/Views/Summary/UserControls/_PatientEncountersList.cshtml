@model IEnumerable<BillingSystem.Model.CustomModel.EncounterCustomModel>

                      <style type="text/css">
                          .emtptyRow {
                              background-color: yellow;
                          }
                      </style>
    
@if (Model != null)
{
    var grid = new WebGrid(Model, ajaxUpdateContainerId: "gridContent", canPage: false);
    <div id="gridContent">
        @grid.GetHtml(htmlAttributes: new { id = "PatientEncountersGrid" }, tableStyle: "table table_scroll_1", headerStyle: "gridHead", footerStyle: "gridFooter", rowStyle: "gridRow", alternatingRowStyle: "gridAltRow",
    columns:
    grid.Columns(
    grid.Column("EncounterStartTime", header: "Start Time", canSort: true, style: "col1", format: @<text>@if (item.EncounterStartTime!= null)
               { @item.EncounterStartTime.ToString("dd/MM/yyyy HH:mm:ss" ) 
               }</text> ),
        //grid.Column("EncounterEndTime", header: "End Time", canSort: true, style: "col2"),
        grid.Column("EncounterEndTime", "End Time",
                                                        format: (item) => ((item.EncounterEndTime == null ? Html.Raw("<span class='emtptyRow'>Encounter not end yet</span") :
                                                                                            Html.Raw(item.EncounterEndTime)))),
    grid.Column("EncounterNumber", header: "Number", canSort: true, style: "col3"),
    grid.Column("EncounterTypeName", header: "Type", canSort: true, style: "col4"),
    grid.Column("EncounterPatientTypeName", header: "Patient Type", canSort: true, style: "col5"),
    grid.Column("Charges", header: "Gross", canSort: true, style: "col6"),
    grid.Column("Payment", header: "Payment", canSort: true, style: "col7")
    )
    )<h6>* Click on any column heading to sort</h6>
    </div>
}
else
{
    <h2>No Record found</h2>
}
<script>
    $(function () {
        if ($('#PatientEncountersGrid tr').length > 4) {
            $('.table_scroll_1').fixedHeaderTable({ cloneHeadToFoot: true, altClass: 'odd', autoShow: true });
        }
        //SetGridSorting(SortEncounterGrid, "#gridContent");
    });
</script>    