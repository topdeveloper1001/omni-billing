   @* @using Kendo.Mvc.UI*@
@model List<BillingSystem.Model.MedicalRecord>


    <div class="table-responsive">
        

        @if (Model != null)
        {
            if (Model.Count > 0)
            {
                @*
                @(Html.Kendo().Grid(Model)
                    .Name("MedicalRecordGrid")
                    .HtmlAttributes(new { style = "height: 460px" })
                    .Columns(columns =>
                    {
                        columns.Bound(p => p.MedicalRecordId).Title("Company");
                        columns.Bound(p => p.MedicalRecordStreetAddress).Title("Address");
                        columns.Bound(p => p.MedicalRecordCity).Title("City");
                        
                        
                        //columns.Bound(p => p.PolicyBeginDate).Format("{0:MM/dd/yyyy}").Title("License Number Expire").Filterable(f => f.UI("DateTimeFilter")); ;
                        //columns.Bound(p => p.PolicyEndDate).Format("{0:MM/dd/yyyy}").Title("License Number Expire").Filterable(f => f.UI("DateTimeFilter")); ;
                       columns.Command(command =>
                              {
                                  command.Custom("Edit").Click("editDetails");
                                  command.Custom("Delete").Click("deleteDetails");
                              }).Title("Actions");
                    })
                    .Groupable()
                    .Scrollable()
                    .Sortable()
                    .Filterable(filterable => filterable
                        .Extra(false)
                        .Operators(operators => operators
                            .ForString(str => str.Clear()
                                .StartsWith("Starts with")
                                .IsEqualTo("Is equal to")
                                .IsNotEqualTo("Is not equal to")
                            ))
                        )   
                   .Pageable(pageable => pageable
                            .Refresh(true)
                            .PageSizes(true)
                            .ButtonCount(5))
                    .DataSource(dataSource => dataSource
                        .Ajax()
                        .PageSize(10)
                        .ServerOperation(false)
                     )
                 .Resizable(resize => resize.Columns(true))
                       )
                *@
                
                                WebGrid grid = new WebGrid(Model, ajaxUpdateContainerId: "gridContent");
                                @grid.GetHtml(tableStyle: "table table-striped table-hover", headerStyle: "gridHead", footerStyle: "gridFooter", rowStyle: "gridRow", alternatingRowStyle: "gridAltRow", columns: grid.Columns(
                                grid.Column("MedicalRecordID", header: "MedicalRecordID" , canSort: true),
                                grid.Column("MedicalRecordType", header: "MedicalRecordType" , canSort: true),
                                grid.Column("CorporateID", header: "CorporateID" , canSort: true),
                                grid.Column("FacilityID", header: "FacilityID" , canSort: true),
                                grid.Column("PatientID", header: "PatientID" , canSort: true),
                                grid.Column("EncounterID", header: "EncounterID" , canSort: true),
                                grid.Column("MedicalRecordNumber", header: "MedicalRecordNumber" , canSort: true),
                                grid.Column("GlobalCodeCategoryID", header: "GlobalCodeCategoryID" , canSort: true),
                                grid.Column("GlobalCode", header: "GlobalCode" , canSort: true),
                                grid.Column("ShortAnswer", header: "ShortAnswer" , canSort: true),
                                //grid.Column("DetailAnswer", header: "DetailAnswer" , canSort: true),
                                //grid.Column("AnswerValueMin", header: "AnswerValueMin" , canSort: true),
                                //grid.Column("AnswerValueMax", header: "AnswerValueMax" , canSort: true),
                                //grid.Column("AnswerUOM", header: "AnswerUOM" , canSort: true),
                                grid.Column("Comments", header: "Comments" , canSort: true),
                                grid.Column("CommentBy", header: "CommentBy" , canSort: true),
                                grid.Column("CommentDate", header: "CommentDate" , canSort: true),
                                grid.Column("ModifiedBy", header: "ModifiedBy" , canSort: true),
                                grid.Column("ModifiedDate", header: "ModifiedDate" , canSort: true),
                                grid.Column("IsDeleted", header: "IsDeleted" , canSort: true),
                                grid.Column("DeletedBy", header: "DeletedBy" , canSort: true),
                                grid.Column("DeletedDate", header: "DeletedDate" , canSort: true),
                                
                    
                                grid.Column(header: "Action", format: @<text>
                                    <a href="#" onclick="EditMedicalRecord('@item.MedicalRecordId')" style="float: left; margin-right: 7px; width: 15px;"><img class="img-responsive" src="../images/edit.png" /></a>
                                                                           &nbsp;
        @*<a href="#" title="Delete" onclick="return DeleteMedicalRecord('@item.MedicalRecordId');" style="float: left; width: 15px;"><img class="img-responsive" src="../images/delete.png" /></a>*@
        <a href="#" title="Delete" onclick="return OpenConfirmPopup('@item.MedicalRecordId','Delete Medical Record','',DeleteMedicalRecord,null); " style="float: left; width: 15px;"><img class="img-responsive" src="../images/delete.png" /></a>
          
                                                                     </text>)
                                ));
            }
            else
            {

                <h2>No Record found</h2>
            }
        }
    </div>

