@using BillingSystem.Common
@model BillingSystem.Model.Authorization

@{
    ViewBag.Title = "Authorization";
}
<style>
    select {
        margin-bottom: 10px;
    }

    .formError {
        z-index: 9999999 !important;
    }
</style>
<div class="form" id="AuthorizationFormDiv">
    @*// BBCOLUMNSHERE*@
    <div class="col-sm-4">
        <div class="rowTable">
            @*<label>Authorization Type:</label>
                @Html.TextBoxFor(m => m.AuthorizationType, new { @maxlength = "10", @id = "txtAuthorizationType" })*@
            <label><span class="mandatoryStar"></span>Authorization Type:</label>
            <select id="ddlAuthorizationType" name="ddlAuthorizationType" class="validate[required]"></select>
            @Html.HiddenFor(m => m.AuthorizationID)
            @Html.HiddenFor(m => m.AuthorizationType, new { @id = "hdAuthorizationType" })
            @Html.HiddenFor(m => m.AuthorizationDateOrdered, new { @id = "hdAuthorizationDateOrdered" })
            @Html.HiddenFor(m => m.CreatedBy, new { @id = "hdCreatedBy" })
            @Html.HiddenFor(m => m.CreatedDate, new { @id = "hdCreatedDate" })
        </div>
        <div class="rowTable">
            <label><span class="mandatoryStar"></span>Authorization Code:</label>
            @Html.TextBoxFor(m => m.AuthorizationCode, new { @maxlength = "10", @id = "txtAuthorizationCode", @class = "validate[required]" })
            @Html.HiddenFor(m => m.PatientID, new { @Id = "hdPatientID" })
            @Html.HiddenFor(m => m.EncounterID, new { @Id = "hdEncounterID" })
        </div>
        <div class="rowTable">
            <label><span class="mandatoryStar"></span>Authorization Limit:</label>
            @Html.TextBoxFor(m => m.AuthorizationLimit, new { @maxlength = "10", @id = "txtAuthorizationLimit", @class = "validate[required,custom[number]]" })
        </div>
        <div class="rowTable">
            <div class="validateAuthDocs">
                <input type="file" id="fileUploadAuth" name="fileUploadAuth" onchange="ValidateFileAndSaveInAuthorization(this);" multiple style="margin-right: 10px;" />
                <span id="fileUploadAuthError" style="color: red;display:none;"></span>
            </div>
        </div>
    </div>
    <div class="col-sm-4">
        <div class="rowTable">
            <label><span class="mandatoryStar"></span>Authorization Start (Encounter Start Time):</label>
            @Html.TextBoxFor(m => m.AuthorizationStart, "{0:MM/dd/yyyy HH:mm}", new { @maxlength = "10", @id = "dtAuthorizationStart", @class = "validate[required] dtGeneralWithTime", @onchange = "CheckTwoDates($('#dtAuthorizationStart'),$('#dtAuthorizationEnd'),'dtAuthorizationStart')", @onblur = "CheckWithEncounterStartTime($('#dtAuthorizationStart'));" })
        </div>
        <div class="rowTable">
            <label><span class="mandatoryStar"></span>Authorization End:</label>
            @Html.TextBoxFor(m => m.AuthorizationEnd, "{0:MM/dd/yyyy HH:mm}", new { @maxlength = "10", @id = "dtAuthorizationEnd", @class = "validate[required] dtGeneralWithTime", @onchange = "CheckTwoDates($('#dtAuthorizationStart'),$('#dtAuthorizationEnd'),'dtAuthorizationEnd')" })
        </div>
        <div class="rowTable">
            <label>Authorization ID Payer:</label>
            <select id="ddlPayer"></select>
            @Html.HiddenFor(m => m.AuthorizationIDPayer)
        </div>
        <div class="rowTable" id="divPayerID" style="display: none;">
            <label>ID Payer:</label>
            <span id="lblPayerIDSelected"></span>
        </div>
    </div>
    <div class="col-sm-4">
        <div class="rowTable">
            <label>Authorization Member ID:</label>
            @Html.TextBoxFor(m => m.AuthorizationMemberID, new { @readonly = "readonly", title = "Patient ID" })
        </div>
        <div class="rowTable">
            <label>Authorization Comments:</label>
            @Html.TextBoxFor(m => m.AuthorizationComments, new { @maxlength = "150", @id = "txtAuthorizationComments" })
        </div>
        <div class="rowTable" id="divDenialCodes">
            <label>Authorized Service Level:</label>
            @*@Html.TextBoxFor(m => m.AuthorizedServiceLevel, new { @maxlength = "10", @id = "txtAuthorizedServiceLevel" })*@
            <select id="txtAuthorizedServiceLevel" style="font-size:11px;" name="txtAuthorizedServiceLevel"></select>
            @Html.HiddenFor(m => m.AuthorizedServiceLevel)
        </div>
    </div>
    <div class="clear"></div>
    <div class="btn-group">
        <div style="float: left;">
            @{
                var saveAuthText = "Save";
                if (Model != null && Model.AuthorizationID != 0)
                {
                    saveAuthText = "Update";
                }
            }
            <input type="submit" class="btn btn-primary edit-btn marginBtn" value="@saveAuthText" id="btnUpdate" onclick="return AuthorizationSubmission('@Model.AuthorizationID    ');" />
            <button name="GenerateEAuth" id="btnGenerateEAuth" class="btn btn-primary edit-btn marginBtn" type="button">Generate & View E-Auth XML</button>
            <button name="ClientCancel" class="btn btn-primary edit-btn marginBtn" type="button" onclick="$('#divhidepopup').hide(); $('.hidePopUp').hide(); $.validationEngine.closePrompt('.formError', true);">Cancel</button>
            <button name="ClientClear" class="btn btn-primary edit-btn marginBtn" type="button" onclick="ClearAuthorizationForm()">Clear</button>
            <br />
            <span id="lblMessage" style="display: none; font-weight: bold; margin-top: 5px;">Fields marked with <span style="color: red;">* </span>are mendatory.</span>
        </div>
    </div>
</div>
<script src="~/Scripts/Common/Common.js?@Helpers.CurrentAssemblyTicks"></script>
<script src="~/Scripts/Authorization/AuthorizationScript.js?@Helpers.CurrentAssemblyTicks"></script>