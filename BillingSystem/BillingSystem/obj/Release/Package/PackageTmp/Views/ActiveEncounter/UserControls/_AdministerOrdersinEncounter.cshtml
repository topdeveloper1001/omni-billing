@model BillingSystem.Model.CustomModel.OrderActivityCustomModel

<style>
    .btn-group {
        margin-left: 15px;
    }
</style>

<div class="form">
    <div class="col-xs-12 col-sm-6 col-md-4 col-lg-4">
        <div class="rowTable">
            <label>Order Type:</label>
            <label id="OrderTypeName"></label>
            @Html.HiddenFor(m => m.OrderActivityID, new { @id = "hdOpenOrderActivityScheduleID" })
            @Html.HiddenFor(m => m.OrderType, new { @id = "hdOrderTypeID" })
            @Html.HiddenFor(m => m.OrderID, new { @id = "hdOpenOrderID" })
            @Html.HiddenFor(m => m.CreatedDate, new { @id = "hdCreatedDate" })
            @Html.HiddenFor(m => m.CreatedBy, new { @id = "hdCreatedBy" })
            @Html.HiddenFor(m => m.OrderCategoryID, new { @id = "hdOrderCategoryID" })
            @Html.HiddenFor(m => m.OrderSubCategoryID, new { @id = "hdOrderSubCategoryID" })
            @Html.HiddenFor(m => m.OrderBy, new { @id = "hdOrderBy" })
            @Html.HiddenFor(m => m.OrderScheduleDate, new { @id = "hdOrderScheduleDate" })
            @Html.HiddenFor(m => m.PlannedBy, new { @id = "hdPlannedBy" })
            @Html.HiddenFor(m => m.PlannedDate, new { @id = "hdPlannedDate" })
            @Html.HiddenFor(m => m.PlannedFor, new { @id = "hdPlannedFor" })
        </div>
        <div class="rowTable">
            <label>Order Code:</label>
            <label id="OrderCode"></label>
            @Html.HiddenFor(m => m.OrderCode, new { @id = "hdOrderCode" })
        </div>
        <div class="rowTable">
            <label>Scheduled On:</label>
            @Html.TextBoxFor(m => m.OrderScheduleDate, new { @id = "txtActivitySchecduleOn", @class = "validate[required]", @readonly = true })
        </div>
        <div class="rowTable">
            <label>Scheduled Quantity:</label>
            @Html.TextBoxFor(m => m.OrderActivityQuantity, new { @id = "txtActivityQuantity", @maxlength = "5", @class = "validate[required] emptytxt", @readonly = true })
        </div>
    </div>
    <div class="col-xs-12 col-sm-6 col-md-4 col-lg-4">
        <div class="rowTable">
            <label>Activity Status:</label>
            <select id="ddlActivityStatus" name="ddlActivityStatus" class="validate[required]"></select>
            @Html.HiddenFor(m => m.OrderActivityStatus, new { @id = "hdActivityStatus" })
        </div>
        <div class="rowTable AddOrderActivity">
            <label>Executed Quantity:</label>
            <select id="ddlExecutedQuantity" name="ddlExecutedQuantity" class="validate[required] emptyddl" onclick="CheckExecutedQuantity();"></select>
            @Html.HiddenFor(m => m.ExecutedQuantity, new { @id = "hdExecutedQuantity" })
        </div>
        <div class="rowTable">
            <label>Encounter Start Date:</label>
            @if (Model != null)
            {
                @Html.TextBoxFor(m => m.EncounterStartDate, new { @id = "txtEncounterStartDate", @readonly = true })
            }
        </div>
        <div class="rowTable">
            <label>Encounter End Date:</label>
            @if (Model != null)
            {
                @Html.TextBoxFor(m => m.EncounterEndDate, new { @id = "txtEncounterEndDate", @readonly = true })
            }
        </div>
        <div class="rowTable editLabActivity telephoneCol1" style="display: none;">
            <label>Lab Test Result:</label>
            <input type="text" name="txtLabtestMinVal" id="txtLabtestMinVal" maxlength="15" placeholder="Enter Lab Result.." />
        </div>
        <div class="rowTable editLabActivity telephoneCol2" style="display: none;">
            <label>Unit Of Measure:</label>
            <select id="ddlResultUOM" name="ddlResultUOM"></select>
            @Html.HiddenFor(m => m.ResultUOM, new { @id = "hdResultUOM" })
        </div>
    </div>
    <div class="col-xs-12 col-sm-6 col-md-4 col-lg-4">
        <div class="rowTable">
            <label>Comments:</label>
            @Html.TextAreaFor(m => m.Comments, new { @id = "txtComments", @maxlength = "500", @placeholder = "Enter your additional comments here...", @style = "height:34px;", @class = "emptytxt" })
        </div>
        <div class="rowTable">
            <div class="col-sm-6 p-0">
                <label><span class="mandatoryStar"></span>Activity Date:</label>
                @Html.TextBoxFor(m => m.ExecutedDate, new { @id = "txtExecutedDate", @maxlength = "18", @placeholder = "Enter Date...", @class = "validate[required]" })
            </div>
            <div class="col-sm-6 p-0">
                <div class="col-sm-6">
                    <label><span class="mandatoryStar"></span>Hours:</label>
                    @Html.TextBoxFor(m => m.ExecutedDate, new { @id = "txtExecuteHour", @maxlength = "2", @placeholder = "Hour", @class = "validate[required]" })
                </div>
                <div class="col-sm-4 p-0">
                    <label><span class="mandatoryStar"></span>Mins:</label>
                    @Html.TextBoxFor(m => m.ExecutedDate, new { @id = "txtExecuteMin", @maxlength = "2", @placeholder = "mins", @class = "validate[required]" })
                </div>
            </div>
        </div>
        <div class="rowTable executedcheck" id="divExecutedQuantityCheck" style="display:none;">
            <p><input type="radio" name="rbtnExecutedCheck" value="1" id="rbtnAdminister1" />  Administer Remaining Orders later</p>
            <p><input type="radio" name="rbtnExecutedCheck" value="2" />  Cancel Remaining Orders</p>
        </div>
    </div>
</div>
<div class="clear"></div>
<div class="col-sm-12">
    <div class="button-block">
        <input type="submit" class="btn btn-primary edit-btn marginrightBtn AddOrderActivity1" id="btnAddOrder" onclick=" return SaveOrderActivity(); " value="Submit" />
        <input type="submit" class="btn btn-primary edit-btn marginrightBtn PharmacyActivity" id="btnPharmacyActivity" onclick=" return SavePharmacyOrderActivity(); " value="Submit" style="display: none;" />
        <input type="submit" class="btn btn-primary edit-btn marginrightBtn AddLabTest" style="display: none;" id="btnLabTestOrder" onclick=" return AddLabTestOrder(); " value="Submit" />
        <input type="submit" class="btn btn-primary edit-btn marginrightBtn" id="btnCancelAdminOrder" onclick=" return CancelAdministrationOrder(); " value="Cancel" />
    </div>
</div>


<script>

    $(function () {
         var startdate = new Date($("#txtEncounterStartDate").val().split(' ')[0]);
        var enddate = new Date($("#txtEncounterEndDate").val().split(' ')[0]);
        $('#txtExecutedDate').datetimepicker({
            format: 'm/d/Y',
            minDate: startdate,
            maxDate: enddate,
            timepicker: false,
            closeOnDateSelect: true
        });
    });
</script>