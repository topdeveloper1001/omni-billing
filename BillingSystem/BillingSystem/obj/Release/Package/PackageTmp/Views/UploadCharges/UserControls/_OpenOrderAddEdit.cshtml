@using BillingSystem.Model
@using System

@model OpenOrder

@using Kendo.Mvc.UI
@using Kendo.Mvc
@using Kendo.Mvc.Extensions

@{
    ViewBag.Title = "Add Physician Order";
}
<style>
    .btn-group {
        margin-left: 15px;
    }

    .marginNone .k-state-default {
        margin-bottom: 0 !important;
    }
</style>

<div class="base-color">
    <div class="form">
        <div>
            <div class="col-sm-6 col-md-6 col-lg-4">
                <div class="rowTable">
                    <label><span class="mandatoryStar"></span>Order Type Category</label>
                    <select id="ddlOrderTypeCategory" name="ddlOrderTypeCategory" class="validate[required] emptyddl" onchange="OnChangeCategory('#ddlOrderTypeCategory', '#ddlOrderTypeSubCategory','#hdOrderTypeSubCategoryID');"></select>
                    @Html.HiddenFor(m => m.CategoryId, new { @id = "hdOrderTypeCategoryID" })
                </div>
                <div class="rowTable">
                    <label id="lblSubcategory"><span class="mandatoryStar"></span>Order Type Sub-Category</label>
                    <select id="ddlOrderTypeSubCategory" name="ddlOrderTypeSubCategory" class="validate[required] emptyddl" onchange="OnChangeSubCatgory('#ddlOrderTypeSubCategory')"></select>
                    @Html.HiddenFor(m => m.SubCategoryId, new { @id = "hdOrderTypeSubCategoryID" })
                </div>
            </div>
            <div class="col-sm-6 col-md-6 col-lg-4">
                <div class="rowTable">
                    <label><span class="mandatoryStar"></span>Activity Type:</label>
                    <label id="CodeTypeValue"></label>
                    @Html.HiddenFor(m => m.OrderType, new { @id = "hdOrderTypeId" })
                </div>
                <div class="rowTable" style="min-height: 47px;">
                    <label><span class="mandatoryStar"></span>Order Status</label>
                    <select id="ddlOrderStatus" name="ddlOrderStatus" class="validate[required]"></select>
                    @Html.HiddenFor(m => m.OrderStatus, new { @id = "hdOrderStatus" })
                </div>
                <div class="rowTable OtherFrequnecy" style="display: none;">
                    <label>Other Frequency</label>
                    @Html.TextBoxFor(m => m.FrequencyCode, new { id = "txtOtherFrequnecy", @maxlength = "15", @class = "emptytxt" })
                </div>
            </div>
            <div class="col-sm-6 col-md-6 col-lg-4">
                <div class="rowTable">
                    <label>Comments</label>
                    @Html.TextAreaFor(m => m.OrderNotes, new { id = "txtOrderNotes", @maxlength = "500", @placeholder = "Enter your additional comments here...", @style = "height:80px;", @class = "emptytxt" })
                </div>
            </div>
        </div>

        <div class="clear"></div>
        <div class="col-sm-12">
            <div class="rowTable">

                <label>Order Codes (You can Select from the dropdown or search the Codes / Description through Smart TextBox):</label>
                <select name="select_this" id="ddlOrderCodes" class="testselectset validate[required]" onchange="BindDrugDDLValue(); CheckForIsFav(); "></select>
                @Html.HiddenFor(m => m.OrderCode, new { @id = "hdOrderCodeId" })
                @Html.HiddenFor(m => m.OrderCode, new { @id = "hdAutocompleteOrderCodeId" })
                @Html.HiddenFor(m => m.OrderType, new { @id = "hdOrderType" })
                @Html.HiddenFor(m => m.EncounterID, new { @id = "hdCurrentEncounterId1" })
                @Html.HiddenFor(m => m.PatientID, new { @id = "hdPatientID2" })
                <input type="hidden" name="hdOrderExternalCode" value="" id="hdOrderExternalCode" />
                <input type="hidden" name="hdOrderActivityID" value="" id="hdOrderActivityID" />
                <input type="hidden" name="hdOrderClaimID" value="" id="hdOrderClaimID" />
                <input type="hidden" name="hdEncounterStartDate" value="" id="hdEncounterStartDate" />
                <input type="hidden" name="hdEncounterEndDate" value="" id="hdEncounterEndDate" />
                <div class="field-group rowTable marginNone">
                    @(Html.Kendo().AutoComplete()
                      .Name("txtOrderCode")
                      .DataTextField("CodeDescription")
                      .Placeholder("Enter Code / Description...")
                      .Filter("contains")
                      .MinLength(3)
                      .Events(e => e.Select("SelectOrderingCode"))
                      .HtmlAttributes(new
                      {
                          id = "txtOrderCode",
                          onfocus = "ajaxStartActive = false;",
                          onblur = "ajaxStartActive = true;",
                          style = "width:100%",
                          maxlength = "20",
                          onchange = "$('#txtOrderCode').val($('#hdAutocompleteOrderCodeId').val());",
                          @class = "emptytxt",
                      })
                      .DataSource(source => source.Read(read => read.Action("GetOrderingCodes", "Home")
                          .Data("OnCodeSelection"))
                          .ServerFiltering(true))
                    )

                </div>
            </div>
        </div>

        <div class="clear"></div>
        <div>
            <div class="col-sm-6 col-md-6 col-lg-4">
                <div class="rowTable">
                    <label><span class="mandatoryStar"></span>Type of Manual Charge</label>
                    <select id="ddlFrequencyList" name="ddlFrequencyList" class="validate[required] emptyddl" onchange="OnChangeFrequency();"></select>
                    @Html.HiddenFor(m => m.FrequencyCode, new { @id = "hdFrequencyCode" })
                </div>
            </div>
            <div class="col-sm-6 col-md-6 col-lg-8">
                <div class="rowTable">
                    <div class="row">
                        <div class="col-sm-3">
                            <label><span class="mandatoryStar"></span>Activity Date Start:</label>
                            @Html.TextBoxFor(m => m.StartDate, new { @Value = Model.StartDate.HasValue ? Convert.ToDateTime(Model.StartDate).ToString("MM/dd/yyyy") : DateTime.Now.ToString("MM/dd/yyyy"), @id = "txtOrderStartDate", @maxlength = "18", @placeholder = "Enter Start Date...", @class = "", @onchange = "OnChangeFrequency();" })
                        </div>
                        <div class="col-sm-3">
                            <div class="col-sm-6">
                                <label><span class="mandatoryStar"></span>Hours:</label>
                                @Html.TextBoxFor(m => m.StartDate, new { @Value = Model.StartDate.HasValue ? Convert.ToDateTime(Model.StartDate).ToString("HH") : DateTime.Now.ToString("HH"), @id = "txtOrderStartTimeH", @maxlength = "2", @placeholder = "Hour", @class = "TimePicker1", @onchange = "OnChangeFrequency();" })
                            </div>
                            <div class="col-sm-6">
                                <label><span class="mandatoryStar"></span>Mins:</label>
                                @Html.TextBoxFor(m => m.StartDate, new { @Value = Model.StartDate.HasValue ? Convert.ToDateTime(Model.StartDate).ToString("mm") : DateTime.Now.ToString("mm"), @id = "txtOrderStartTimeM", @maxlength = "2", @placeholder = "mins", @class = "TimePicker1", @onchange = "OnChangeFrequency();" })
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <label><span class="mandatoryStar"></span>Activity Date End:</label>
                            @Html.TextBoxFor(m => m.EndDate, new { @id = "txtOrderEndDate", @maxlength = "18", @placeholder = "Enter End Date...", @class = "", @onchange = "OnChangeFrequency();" })
                        </div>
                        <div class="col-sm-3">
                            <div class="col-sm-6">
                                <label><span class="mandatoryStar"></span>Hours:</label>
                                @Html.TextBoxFor(m => m.EndDate, new { @Value = Model.EndDate.HasValue ? Convert.ToDateTime(Model.EndDate).ToString("HH") : DateTime.Now.ToString("HH"), @id = "txtOrderEndTimeH", @maxlength = "2", @placeholder = "hour", @class = "disabledTxt", @onchange = "OnChangeFrequency();" })
                            </div>
                            <div class="col-sm-6">
                                <label><span class="mandatoryStar"></span>Mins:</label>
                                @Html.TextBoxFor(m => m.EndDate, new { @Value = Model.EndDate.HasValue ? Convert.ToDateTime(Model.EndDate).ToString("mm") : DateTime.Now.ToString("mms"), @id = "txtOrderEndTimeM", @maxlength = "2", @placeholder = "min", @class = "disabledTxt", @onchange = "OnChangeFrequency();" })
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="col-md-12">
                <div id="divQuantitySingle">
                    <div class="col-sm-6 col-md-6 col-lg-4">&nbsp;</div>
                    <div class="col-sm-6 col-md-6 col-lg-4">
                        <div class="rowTable">
                            <label><span class="mandatoryStar"></span>Quantity for day</label>
                            @*@Html.TextBoxFor(m => m.Quantity, new { id = "txtQuantity", @maxlength = "5", @class = "validate[required, custom[integer]] emptytxt" })*@
                            <select id="ddlQuantityList" name="ddlQuantityList" class="validate[required] emptyddl"></select>
                            @Html.HiddenFor(m => m.Quantity, new { @id = "hdQuantity" })
                        </div>
                    </div>
                    <div class="col-sm-6 col-md-6 col-lg-4">&nbsp;</div>
                </div>
                <div class="col-md-12 yellowBox2" id="divQuantityMultiple" style="display: none;">
                </div>
            </div>
        </div>
        <div class="col-sm-12">
            <div class="button-block">
                <input type="submit" class="btn btn-primary edit-btn marginrightBtn AddOrder" id="btnAddOrder" onclick="return IsValidOrderInUploadCharges('@Model.OpenOrderID    ');" value="Submit" />
                <input type="button" class="btn btn-primary edit-btn marginrightBtn" value="Cancel" onclick="ResetOrder();" />
            </div>
        </div>
    </div>
</div>
