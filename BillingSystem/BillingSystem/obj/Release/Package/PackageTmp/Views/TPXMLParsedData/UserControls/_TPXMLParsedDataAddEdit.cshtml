@using BillingSystem.Model
@model TPXMLParsedData

<style>
    .btn-group {
        margin-left: 10px;
        margin-bottom: 20px;
    }

    .clear {
        clear: both;
    }

    select {
        margin-bottom: 10px;
    }
</style>

@{
    var btnSaveText = "Save";
    if (Model.TPXMLParsedDataId != null && Model.TPXMLParsedDataId != 0)
    {
        btnSaveText = "Update";
    }
}
<div class="form" id="TPXMLParsedDataFormDiv">
    @*// BBCOLUMNSHERE*@
   <div class="col-sm-3">
      <div class="rowTable">
        <label>TPXMLParsedDataID:</label>
        @Html.TextBoxFor(m => m.TPXMLParsedDataID, new { @maxlength = "10", @id = "txtTPXMLParsedDataID" })
      </div>
      <div class="rowTable">
        <label>TPFileID:</label>
        @Html.TextBoxFor(m => m.TPFileID, new { @maxlength = "10", @id = "txtTPFileID" })
      </div>
      <div class="rowTable">
        <label>CClaimID:</label>
        @Html.TextBoxFor(m => m.CClaimID, new { @maxlength = "50", @id = "txtCClaimID" })
      </div>
      <div class="rowTable">
        <label>CMemberID:</label>
        @Html.TextBoxFor(m => m.CMemberID, new { @maxlength = "50", @id = "txtCMemberID" })
      </div>
      <div class="rowTable">
        <label>CPayerID:</label>
        @Html.TextBoxFor(m => m.CPayerID, new { @maxlength = "50", @id = "txtCPayerID" })
      </div>
   </div>
   <div class="col-sm-3">
      <div class="rowTable">
        <label>CProviderID:</label>
        @Html.TextBoxFor(m => m.CProviderID, new { @maxlength = "50", @id = "txtCProviderID" })
      </div>
      <div class="rowTable">
        <label>CEmiratesIDNumber:</label>
        @Html.TextBoxFor(m => m.CEmiratesIDNumber, new { @maxlength = "100", @id = "txtCEmiratesIDNumber" })
      </div>
      <div class="rowTable">
        <label>CGross:</label>
        @Html.TextBoxFor(m => m.CGross, new { @maxlength = "20", @id = "txtCGross" })
      </div>
      <div class="rowTable">
        <label>CPatientShare:</label>
        @Html.TextBoxFor(m => m.CPatientShare, new { @maxlength = "20", @id = "txtCPatientShare" })
      </div>
      <div class="rowTable">
        <label>CNet:</label>
        @Html.TextBoxFor(m => m.CNet, new { @maxlength = "20", @id = "txtCNet" })
      </div>
   </div>
   <div class="col-sm-3">
      <div class="rowTable">
        <label>EFacilityID:</label>
        @Html.TextBoxFor(m => m.EFacilityID, new { @maxlength = "50", @id = "txtEFacilityID" })
      </div>
      <div class="rowTable">
        <label>EType:</label>
        @Html.TextBoxFor(m => m.EType, new { @maxlength = "50", @id = "txtEType" })
      </div>
      <div class="rowTable">
        <label>EPatientID:</label>
        @Html.TextBoxFor(m => m.EPatientID, new { @maxlength = "50", @id = "txtEPatientID" })
      </div>
      <div class="rowTable">
        <label>EligibilityIDPayer:</label>
        @Html.TextBoxFor(m => m.EligibilityIDPayer, new { @maxlength = "100", @id = "txtEligibilityIDPayer" })
      </div>
      <div class="rowTable">
        <label>EStart:</label>
        @Html.TextBoxFor(m => m.EStart, new { @maxlength = "25", @id = "txtEStart" })
      </div>
   </div>
   <div class="col-sm-3">
      <div class="rowTable">
        <label>EEnd:</label>
        @Html.TextBoxFor(m => m.EEnd, new { @maxlength = "25", @id = "txtEEnd" })
      </div>
      <div class="rowTable">
        <label>EStartType:</label>
        @Html.TextBoxFor(m => m.EStartType, new { @maxlength = "50", @id = "txtEStartType" })
      </div>
      <div class="rowTable">
        <label>EEndType:</label>
        @Html.TextBoxFor(m => m.EEndType, new { @maxlength = "50", @id = "txtEEndType" })
      </div>
      <div class="rowTable">
        <label>DType:</label>
        @Html.TextBoxFor(m => m.DType, new { @maxlength = "50", @id = "txtDType" })
      </div>
      <div class="rowTable">
        <label>DCode:</label>
        @Html.TextBoxFor(m => m.DCode, new { @maxlength = "50", @id = "txtDCode" })
      </div>
   </div>
   <div class="col-sm-3">
      <div class="rowTable">
        <label>AStart:</label>
        @Html.TextBoxFor(m => m.AStart, new { @maxlength = "25", @id = "txtAStart" })
      </div>
      <div class="rowTable">
        <label>AType:</label>
        @Html.TextBoxFor(m => m.AType, new { @maxlength = "50", @id = "txtAType" })
      </div>
      <div class="rowTable">
        <label>ACode:</label>
        @Html.TextBoxFor(m => m.ACode, new { @maxlength = "50", @id = "txtACode" })
      </div>
      <div class="rowTable">
        <label>AQuantity:</label>
        @Html.TextBoxFor(m => m.AQuantity, new { @maxlength = "20", @id = "txtAQuantity" })
      </div>
      <div class="rowTable">
        <label>ANet:</label>
        @Html.TextBoxFor(m => m.ANet, new { @maxlength = "20", @id = "txtANet" })
      </div>
   </div>
    <div class="clear"></div>
    <div class="btn-group">
        <div style="float: left;">
            <input type="submit" id="btnSave" class="btn btn-primary edit-btn marginBtn" value="@btnSaveText" onclick="return SaveTPXMLParsedData();" />
            <button name="ClientCancel" id="btnCancel" class="btn btn-primary edit-btn marginBtn" type="button" onclick="return ClearTPXMLParsedDataForm();">Cancel</button>
        </div>
    </div>
</div>
