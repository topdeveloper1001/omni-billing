@using BillingSystem.Model.CustomModel
@model IEnumerable<PhysicianCustomModel>

<style type="text/css">
    #TreeView .k-group li {
        float: left;
        width: 45%;
    }
</style>
@*@(Html.Kendo().TreeView().Name("treeviewPhysician").Checkboxes(checkboxes => checkboxes.Name("checkedFiles").CheckChildren(true)).Events(iten => iten.Check("onCheckFilters")).HtmlAttributes(new { }).HighlightPath(false).Items(menu =>
          {
              var list = Model;
              foreach (var item in list)
              {
                  if (item.UserTypeStr.Contains("Nur"))
                  {
                      menu.Add().Text(item.Physician.PhysicianName + "(" + item.UserTypeStr + ")").HasChildren(false).Id(item.Physician.Id.ToString()).Checked(true).SpriteCssClasses("symbol_nurse").HtmlAttributes(new { @title = "Speciality:" + item.UserSpecialityStr }).Expanded(false);
                  }
                  else
                  {
                     menu.Add().Text(item.Physician.PhysicianName + "(" + item.UserTypeStr + ")").HasChildren(false).Id(item.Physician.Id.ToString()).Checked(true).SpriteCssClasses("symbol_doctor").HtmlAttributes(new { @title = "Speciality:" + item.UserSpecialityStr }).Expanded(false);
                  }
              }
          })
          )
    @Html.Kendo().DeferredScripts()*@

@{
    var usertype = string.Empty;

}
<ul id="treeviewPhysician" class="tree_viewlist overflow_tree">
    @foreach (var item in Model)
    {

        @*<li id="liLocationCheckBox_@item.Physician.Id" onclick="CheckFacilityPhysicians('@item.Physician.Id')">*@
        <li id="liPhysicianCheckBox_@item.Physician.Id">
            <input type="checkbox" id="chkPhysician_@item.Physician.Id" checked="checked" onchange="CheckUnCheckBox(this, 'treeviewPhysician', 'physician')" />
            @if (item.UserTypeStr.Contains("Nur"))
            {
                <span class="symbol_nurse"></span>
            }
            else if (item.UserTypeStr.Contains("Phy"))
            {
                <span class="symbol_doctor"></span>
            }
            else if (item.UserTypeStr.Contains("lab"))
            {
                <span class="symbol_lab"></span>
            }
            else
            {
                <span class="symbol_other"></span>
            }
            <a id="Phy_@item.Physician.Id" title="Speciality: @item.UserSpecialityStr">@item.Physician.PhysicianName ( @item.UserTypeStr )</a>
        </li>

        @*if (string.IsNullOrEmpty(usertype) || !item.UserTypeStr.Equals(usertype))
                {
                    usertype = item.UserTypeStr;
                    <li><label style="font-style: italic;">@usertype</label></li>
                }
            <li id="liPhysicianCheckBox_@item.Physician.Id">
                <input type="checkbox" id="chkPhysician_@item.Physician.Id" checked="checked" onchange="CheckUnCheckBox(this, 'treeviewPhysician', 'physician')" />
                @if (item.UserTypeStr.Contains("Nur"))
                {
                    <span class="symbol_nurse"></span>
                }
                else if (item.UserTypeStr.Contains("Phy"))
                {
                    <span class="symbol_doctor"></span>
                }
                else if (item.UserTypeStr.Contains("lab"))
                {
                    <span class="symbol_lab"></span>
                }
                else
                {
                    <span class="symbol_other"></span>
                }
                <a id="Phy_@item.Physician.Id" title="Speciality: @item.UserSpecialityStr">@item.Physician.PhysicianName</a>
            </li>*@
    }
</ul>